@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class GUIController {
  + GUIController(): 
  ~ player: ClientNew
  + lockBoard(): void
  ~ updateOnDemand(): void
  + getTurn(): void
  + movePiece(MouseEvent): void
  + showInstruction(ActionEvent): void
  + exitGame(ActionEvent): void
  + getTurnBasedOnGameStatus(GameStatus): void
  + unlockBoard(): void
   player: ClientNew
}
class GUIStart {
  + GUIStart(): 
  + start(Stage): void
}
class GUIbehaviour {
  ~ GUIbehaviour(): 
  - correctMove: boolean
  + addElement(Pane): void
  + removePiecesAfterMove(int, List<Position>, GridPane): void
  + transformIndexes(Node): Position
  + getImageName(String): String
  + updateBoard(String[][], GUIController): void
  + serverCheck(ClientNew, List<Pane>): List<Position>
  + deletePiece(Pane): void
  + getPositionFromPane(List<Pane>): List<Position>
  + copyFromTo(ArrayList<Pane>): void
  + add(Pane, String): void
   correctMove: boolean
}
class GameBoardManager {
  ~ GameBoardManager(GUIController, GameStatus): 
  + call(): Boolean
}
enum ImageType << enumeration >> {
  - ImageType(String): 
  + toString(): String
  + values(): ImageType[]
  + valueOf(String): ImageType
  + equalsName(String): boolean
}
class TypesController {
  + TypesController(): 
  ~ player: ClientNew
  + choseType(ActionEvent): void
   player: ClientNew
}

GUIController     -[#595959,dashed]->  GUIbehaviour     : "«create»"
GUIController     -[#595959,dashed]->  GameBoardManager : "«create»"
GameBoardManager  +-[#820000,plain]-  GUIController    
GameBoardManager "1" *-[#595959,plain]-> "guiController\n1" GUIController    
@enduml
